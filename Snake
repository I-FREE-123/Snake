import pygame
from random import randrange
import sys

WIN = 500 # указываем празмер окна
COLOR_WIN = 138, 43, 226 #2 указываем цвет окна
BLOCK = 20 # размер блока
COLOR_BLOCK = 30, 144, 255

x, y = randrange(0, WIN, BLOCK), randrange(0, WIN, BLOCK) # начальное положенеие змейки и яблока будут рандомными
# в диапазоне нашего разрешения
apple = randrange(0, WIN, BLOCK), randrange(0, WIN, BLOCK)
color_ap = 255, 255, 0 #2 указываем цвет яблока
length = 1  # изначальный размер змейки  и ее шаг
snake = [(x, y)] # в виде списка координат
dx, dy = 0, 0 # направление движения
fps = 3 # скорость движения нашей змейки
score = 0 # 3 подщет очков
COLOR_SCORE = 173, 255, 47
pygame.display.set_caption('Змейка')
pygame.init()  # запускаем модуль
screen = pygame.display.set_mode([WIN, WIN]) # coздаем окно
clock = pygame.time.Clock() # создаем класс clock для регулирования скорости змейки
font_score = pygame.font.SysFont('Arial', 20, bold=True)  #3 задаем порометры текста для вывода очков
font_end = pygame.font.SysFont('Arial', 66, bold=True)    #3 Делаем конечную надпись
COLOR_END = 0, 0, 0


while True:
    screen.fill(pygame.Color(COLOR_WIN)) # задаем цвет окна
    # отоюражаем змейку и яблоко в нашем окне
    [(pygame.draw.rect(screen, pygame.Color(COLOR_BLOCK), (i, j, BLOCK -2 , BLOCK -2))) for i, j in snake] # будем проходиться по ней циклом
    pygame.draw.rect(screen, pygame.Color(color_ap), (*apple, BLOCK, BLOCK)) # указываем цвет яблока и указываем его как квадрат
    #3 зададим параметры цвета и расположения счетчика очков
    render_score = font_score.render(f'SCORE:{score}', 1, pygame.Color(COLOR_SCORE))
    screen.blit(render_score, (5, 5))

# задаем координаты движения змейки
    x += dx * BLOCK   # один шаг будет равен размеру головы змейки
    y += dy * BLOCK
    snake.append((x,y))  # 2каждый шаг добавляем в список координат
    snake = snake[-length:] # 2задаем нужный размер змейи

    # 2если сьели яблока
    if snake[-1] == apple: #2 когда голова змейки ровна кординатам яблока то выходит что мы его сьели
        apple = randrange(0, WIN, BLOCK), randrange(0, WIN, BLOCK) # 2 и мы заново размещаем яблоко
        length += 1 #2 и голова змейки увеличивается на 1 блок
        fps += 1 #2 увечивается скорость при поедании яблок
        score += 1 #3 число очков будет увеличиваться с поеданием яблок на 1
    # 2 когда мы проиграли: Когда вышли за пределы поля или сьели себя
    if x < 0 or x > WIN - BLOCK or y < 0 or y > WIN - BLOCK or len(snake) != len(set(snake)):
        while True:
            render_end = font_end.render('GAME OVER', 1, pygame.Color(COLOR_END))
            screen.blit(render_end, (WIN // 2 -200, WIN // 3)) # вновим координаты где будет распологаться надпись на окне
            pygame.display.flip() # проводим проверку закрытия приложения
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    exit()

    pygame.display.flip() # выводим наш дисплей
    clock.tick(fps) #задаем задержку

    for event in pygame.event.get(): # проходим циклом для проверки и закрытия окна
        if event.type == pygame.QUIT: # позволяет оставить окно открытым
         sys.exit()


    #2 управление клавишами змейки
    key = pygame.key.get_pressed()  # создаем ключи для управления
    if key[pygame.K_w]: # создаем ключи которыу отвечают за управление кнопками
        dx, dy = 0, -1
    if key[pygame.K_s]:
        dx, dy = 0, 1
    if key[pygame.K_a]:
        dx, dy = -1, 0
    if key[pygame.K_d]:
        dx, dy = 1, 0
